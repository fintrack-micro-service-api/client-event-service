server:
  port: 8088
baseUrl: http://localhost:${server.port}

spring:

  application:
    name: client-event-service

  kafka:
    producer:
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      bootstrap-servers: localhost:9092
    dead_letter_topic: notification-retry

  mail:
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri:  https://keycloak-fintrack.sythorng.site/auth/realms/USER_SERVICE
          jwk-set-uri: https://keycloak-fintrack.sythorng.site/auth/realms/USER_SERVICE/protocol/openid-connect/certs

  datasource:
#    url: jdbc:postgresql://8.219.131.180:8765/fintrack
#    username: root
#    password: P@SSWORD666
    url: jdbc:postgresql://localhost:33007/mini_project_db
    username: my_user
    password: my_password
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect

keycloak:
  realm: USER_SERVICE
  resource: client-app
  #  auth-server-url: https://demo.docengine.tech/auth/ #docker container
  auth-server-url: https://keycloak-fintrack.sythorng.site/auth/ #docker container
  credentials:
    username: 'admin'
    password: 'admin'
    client-id: 'client-app' # admin account for creating users
    secret: 'fdakufDNpefxzc7oaGHugg4UcL6jmSAy'

  grant-type: password
  tokenUrl: https://keycloak-fintrack.sythorng.site/auth/realms/USER_SERVICE/protocol/openid-connect/token

spring.mail:
  host: smtp.gmail.com
  port: 587
  username: soccerdatehrd@gmail.com
  password: nolwmacooizbnviz

spring.servlet:
  multipart:
    maxFileSize: 20000MB
    maxRequestSize: 20000MB
image:
  url: ${baseUrl}/api/v1/file/get-image?file=

telegram:
  url: http://localhost:8082/api/v1/telegram

#for link verify email that get from angular
LoginPage:
  url: http://localhost:4200/api/v1/login-page
forgetPasswordPage:
  url: http://localhost:4200/api/v1/forget-password
ExpiredPage:
  url: http://localhost:4200/api/v1/expired-page


#springdoc:
#  api-docs:
#    path: /client-event-service/v3/api-docs #these urls will used to load the swagger ui of this service by the api gateway
#  swagger-ui:
#    path: /client-event-service/swagger-ui.html